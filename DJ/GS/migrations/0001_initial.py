# Generated by Django 5.0.1 on 2024-01-26 03:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Group",
            fields=[
                ("name", models.CharField(max_length=30)),
                ("description", models.CharField(max_length=1000)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("username", models.CharField(max_length=30)),
                ("password", models.CharField(max_length=30)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                ("message", models.CharField(max_length=1000)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("time", models.DateTimeField(auto_now=True)),
                (
                    "belong",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="belong",
                        to="GS.group",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sender",
                        to="GS.user",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="group",
            name="messages",
            field=models.ManyToManyField(related_name="messages", to="GS.message"),
        ),
        migrations.AddField(
            model_name="group",
            name="members",
            field=models.ManyToManyField(related_name="members", to="GS.user"),
        ),
    ]
